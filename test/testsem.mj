program syntest
const int k1 = 2;
const char c1 = 'c';
int x, y, z;

class C1 {
int f1, f2;
char f3;
C1 c;
{
  int m1(int p1, char p2) {
    return p1;
  }
}
}

class C2 extends C1 {
{
  int m1(int p1, char p2) {
    return p1 - 1;
  }
}
}

{
  int f1() {
    return 1;
  }
  void main() int l1, l2, l3; C1 c1; C2 c2; C1 niz[]; {
     l1 = -l2 + l3*l3 - l1 /= l2/l1 += l1 + f1();
     l1++;
     c1 = new C1;
     c1.m1(l1, 'c');


     for(l1 = 0; l1 < l2; l1++) {
       if(l1 == 0 && l2 > 0 || l1 == 2)
        continue;

       if(l1 == 1)
         break;

       read(l2);
       print(l2);
     }

     niz = new C1[2];
     niz[0].m1(l2, 'm');
  }
}
